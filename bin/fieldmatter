#!/usr/bin/env ruby
# bin/fieldmatter - fieldmatter Ruby Gem executeable for clientside fieldmatter syncing

# add lib to ruby's load path
$LOAD_PATH.unshift(File.dirname(__FILE__) + '/../lib') unless $LOAD_PATH.include?(File.dirname(__FILE__) + '/../lib')

require 'fieldmatter'
require 'optparse'


maximum_line_length = 80


module Colorize
  def purple ( text )
    colorized_output = true
    purple = "\e[35m"
    reset_color = "\e[0m"

    output = text
    if colorized_output
      output.insert(0, purple) # start purple color
      output.insert(-1, reset_color) # reset color back to what it was
    end
  end
end

OptionParser.new do |op|
  include Colorize
  # set banner for help documentation
  op.set_banner(purple("Usage:") + " fieldmatter [options]\n" \
    + purple("Description:") + " Clientside utility for working with tags, extended attributes and openmeta data")
  op.separator " "
  op.separator(purple("Specific options:"))

  op.on("--no-color", "Disable colorized output") do |color|
    colorized_output = color
  end

  op.on_tail("-h", "--help", "Displays this help message") do
    $stderr.puts op
    exit 1
  end

  op.on_tail("--version", "Prints the version") do
    puts FieldMatter::VERSION
    exit
  end
end.parse!


# TODO: change to use specified repo path

sm = FieldMatter::StrangeMatter.new('/Users/fielding/notes')
sm.update